<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="PF1QDEC8" ignored="0" name="Default test" tests="16" failures="0" timestamp="14 Jan 2020 21:25:34 GMT" time="0.566" errors="0">
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeMethod on method setup but has not been marked @Optional or defined
in C:\Users\mohammad.parvez\AppData\Local\Temp\testng-eclipse-1416057148\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or definedin C:\Users\mohammad.parvez\AppData\Local\Temp\testng-eclipse-1416057148\testng-customsuite.xmlat org.testng.internal.Parameters.createParams(Parameters.java:290)at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)at org.testng.internal.Parameters.createParameters(Parameters.java:620)at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)at org.testng.internal.Invoker.invokeMethod(Invoker.java:516)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@BeforeMethod startExtent" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase name="@AfterMethod afterEachTestMethod" time="0.0" classname="com.dashManagement.utilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase name="validateStoreElementCurrencyField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementCurrencyField -->
  <testcase name="validateStoreElementDateField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementDateField -->
  <testcase name="validateStoreElementExceptionField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementExceptionField -->
  <testcase name="validateStoreElementFeatureLinkField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementFeatureLinkField -->
  <testcase name="validateStoreElementHyperlinkField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementHyperlinkField -->
  <testcase name="validateStoreElementInLineAttachmentField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementInLineAttachmentField -->
  <testcase name="validateStoreElementInstructionField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementInstructionField -->
  <testcase name="validateStoreElementListField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementListField -->
  <testcase name="validateStoreElementLooseAttachmentField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementLooseAttachmentField -->
  <testcase name="validateStoreElementNumericField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementNumericField -->
  <testcase name="validateStoreElementPictureField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementPictureField -->
  <testcase name="validateStoreElementScanTypeField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementScanTypeField -->
  <testcase name="validateStoreElementShopcomField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementShopcomField -->
  <testcase name="validateStoreElementSignatureField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementSignatureField -->
  <testcase name="validateStoreElementSingleScreenWrapperField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementSingleScreenWrapperField -->
  <testcase name="validateStoreElementTextField" time="0.0" classname="com.projects.templates.testCases.TC_StoreTemplatesPageTest_002">
    <skipped/>
  </testcase> <!-- validateStoreElementTextField -->
</testsuite> <!-- Default test -->
